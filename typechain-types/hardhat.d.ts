/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771Context__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC173Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173Internal__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IOwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnableInternal__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableInternal__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlInternal__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlInternal__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "ECDSAMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSAMock__factory>;
    getContractFactory(
      name: "EIP712Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Mock__factory>;
    getContractFactory(
      name: "MerkleProofMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleProofMock__factory>;
    getContractFactory(
      name: "BinaryHeapAddressMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BinaryHeapAddressMock__factory>;
    getContractFactory(
      name: "BinaryHeapBytes32Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BinaryHeapBytes32Mock__factory>;
    getContractFactory(
      name: "BinaryHeapUintMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BinaryHeapUintMock__factory>;
    getContractFactory(
      name: "DoublyLinkedList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoublyLinkedList__factory>;
    getContractFactory(
      name: "DoublyLinkedListAddressMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoublyLinkedListAddressMock__factory>;
    getContractFactory(
      name: "DoublyLinkedListBytes32Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoublyLinkedListBytes32Mock__factory>;
    getContractFactory(
      name: "DoublyLinkedListUint256Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoublyLinkedListUint256Mock__factory>;
    getContractFactory(
      name: "EnumerableMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableMap__factory>;
    getContractFactory(
      name: "EnumerableMapAddressToAddressMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableMapAddressToAddressMock__factory>;
    getContractFactory(
      name: "EnumerableMapUintToAddressMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableMapUintToAddressMock__factory>;
    getContractFactory(
      name: "EnumerableSet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableSet__factory>;
    getContractFactory(
      name: "EnumerableSetAddressMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableSetAddressMock__factory>;
    getContractFactory(
      name: "EnumerableSetBytes32Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableSetBytes32Mock__factory>;
    getContractFactory(
      name: "EnumerableSetUintMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableSetUintMock__factory>;
    getContractFactory(
      name: "IncrementalMerkleTreeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IncrementalMerkleTreeMock__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondInit__factory>;
    getContractFactory(
      name: "IInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInitializable__factory>;
    getContractFactory(
      name: "IInitializableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInitializableInternal__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "InitializableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableInternal__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC165Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Internal__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC165Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Internal__factory>;
    getContractFactory(
      name: "Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Context__factory>;
    getContractFactory(
      name: "ContextInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextInternal__factory>;
    getContractFactory(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771Context__factory>;
    getContractFactory(
      name: "ERC2771ContextInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextInternal__factory>;
    getContractFactory(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2771Context__factory>;
    getContractFactory(
      name: "Package",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Package__factory>;
    getContractFactory(
      name: "PackageInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PackageInternal__factory>;
    getContractFactory(
      name: "DiamondBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondBase__factory>;
    getContractFactory(
      name: "IDiamondBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondBase__factory>;
    getContractFactory(
      name: "DiamondReadable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondReadable__factory>;
    getContractFactory(
      name: "IDiamondReadable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondReadable__factory>;
    getContractFactory(
      name: "DiamondWritable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondWritable__factory>;
    getContractFactory(
      name: "DiamondWritableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondWritableInternal__factory>;
    getContractFactory(
      name: "IDiamondWritable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondWritable__factory>;
    getContractFactory(
      name: "IDiamondWritableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondWritableInternal__factory>;
    getContractFactory(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ISmartContractAccessManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartContractAccessManagement__factory>;
    getContractFactory(
      name: "ISmartContractAccessManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartContractAccessManagementInternal__factory>;
    getContractFactory(
      name: "SmartContractAccessManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SmartContractAccessManagement__factory>;
    getContractFactory(
      name: "SmartContractAccessManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SmartContractAccessManagementInternal__factory>;
    getContractFactory(
      name: "Coupon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Coupon__factory>;
    getContractFactory(
      name: "ICoupon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICoupon__factory>;
    getContractFactory(
      name: "IRedemption",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRedemption__factory>;
    getContractFactory(
      name: "Redemption",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Redemption__factory>;
    getContractFactory(
      name: "DelegateInvestorManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelegateInvestorManagement__factory>;
    getContractFactory(
      name: "DelegateInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelegateInvestorManagementInternal__factory>;
    getContractFactory(
      name: "IDelegateInvestorManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegateInvestorManagement__factory>;
    getContractFactory(
      name: "IDelegateInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegateInvestorManagementInternal__factory>;
    getContractFactory(
      name: "IInvestorManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInvestorManagement__factory>;
    getContractFactory(
      name: "IInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInvestorManagementInternal__factory>;
    getContractFactory(
      name: "InvestorManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InvestorManagement__factory>;
    getContractFactory(
      name: "InvestorManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InvestorManagementInternal__factory>;
    getContractFactory(
      name: "IRegister",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegister__factory>;
    getContractFactory(
      name: "IRegisterDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterDiamond__factory>;
    getContractFactory(
      name: "IRegisterMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterMetadata__factory>;
    getContractFactory(
      name: "IRegisterMetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterMetadataInternal__factory>;
    getContractFactory(
      name: "RegisterMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterMetadata__factory>;
    getContractFactory(
      name: "RegisterMetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterMetadataInternal__factory>;
    getContractFactory(
      name: "RegisterDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterDiamond__factory>;
    getContractFactory(
      name: "RegisterDiamondReadable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterDiamondReadable__factory>;
    getContractFactory(
      name: "RegisterDiamondWritable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterDiamondWritable__factory>;
    getContractFactory(
      name: "IRegisterRoleManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterRoleManagement__factory>;
    getContractFactory(
      name: "IRegisterRoleManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterRoleManagementInternal__factory>;
    getContractFactory(
      name: "RegisterRoleManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterRoleManagement__factory>;
    getContractFactory(
      name: "RegisterRoleManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegisterRoleManagementInternal__factory>;
    getContractFactory(
      name: "CouponSnapshotManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CouponSnapshotManagement__factory>;
    getContractFactory(
      name: "CouponSnapshotManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CouponSnapshotManagementInternal__factory>;
    getContractFactory(
      name: "ICouponSnapshotManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICouponSnapshotManagement__factory>;
    getContractFactory(
      name: "ICouponSnapshotManagementInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICouponSnapshotManagementInternal__factory>;
    getContractFactory(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausable__factory>;
    getContractFactory(
      name: "IPausableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausableInternal__factory>;
    getContractFactory(
      name: "IReentrancyGuardInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReentrancyGuardInternal__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "PausableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableInternal__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "ReentrancyGuardInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardInternal__factory>;
    getContractFactory(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Base__factory>;
    getContractFactory(
      name: "ERC1155BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BaseInternal__factory>;
    getContractFactory(
      name: "IERC1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Base__factory>;
    getContractFactory(
      name: "IERC1155BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155BaseInternal__factory>;
    getContractFactory(
      name: "ERC1155Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Enumerable__factory>;
    getContractFactory(
      name: "ERC1155EnumerableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155EnumerableInternal__factory>;
    getContractFactory(
      name: "ERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Metadata__factory>;
    getContractFactory(
      name: "ERC1155MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MetadataInternal__factory>;
    getContractFactory(
      name: "IERC1155Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Enumerable__factory>;
    getContractFactory(
      name: "IERC1155EnumerableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155EnumerableInternal__factory>;
    getContractFactory(
      name: "IERC1155Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Metadata__factory>;
    getContractFactory(
      name: "IERC1155MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataInternal__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Internal__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BaseInternal__factory>;
    getContractFactory(
      name: "IERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Base__factory>;
    getContractFactory(
      name: "IERC20BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20BaseInternal__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20BurnableInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BurnableInternal__factory>;
    getContractFactory(
      name: "ERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Metadata__factory>;
    getContractFactory(
      name: "ERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Snapshot__factory>;
    getContractFactory(
      name: "ERC20SnapshotInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20SnapshotInternal__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Snapshot__factory>;
    getContractFactory(
      name: "IERC20SnapshotInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20SnapshotInternal__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Internal__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BaseInternal__factory>;
    getContractFactory(
      name: "IERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Base__factory>;
    getContractFactory(
      name: "IERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721BaseInternal__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: "ERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MetadataInternal__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataInternal__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Internal__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "BilateralTrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BilateralTrade__factory>;
    getContractFactory(
      name: "IBilateralTrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBilateralTrade__factory>;
    getContractFactory(
      name: "IPrimaryIssuance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrimaryIssuance__factory>;
    getContractFactory(
      name: "PrimaryIssuance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimaryIssuance__factory>;
    getContractFactory(
      name: "ITrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITrade__factory>;
    getContractFactory(
      name: "AddressUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressUtils__factory>;
    getContractFactory(
      name: "AddressUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressUtilsMock__factory>;
    getContractFactory(
      name: "ArrayUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayUtilsMock__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "MathMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathMock__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "MulticallMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MulticallMock__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "UintUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UintUtils__factory>;
    getContractFactory(
      name: "UintUtilsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UintUtilsMock__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "ERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771Context>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC173Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173Internal>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IOwnableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnableInternal>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "OwnableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableInternal>;
    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlInternal>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlInternal>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "ECDSAMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSAMock>;
    getContractAt(
      name: "EIP712Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Mock>;
    getContractAt(
      name: "MerkleProofMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleProofMock>;
    getContractAt(
      name: "BinaryHeapAddressMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BinaryHeapAddressMock>;
    getContractAt(
      name: "BinaryHeapBytes32Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BinaryHeapBytes32Mock>;
    getContractAt(
      name: "BinaryHeapUintMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BinaryHeapUintMock>;
    getContractAt(
      name: "DoublyLinkedList",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoublyLinkedList>;
    getContractAt(
      name: "DoublyLinkedListAddressMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoublyLinkedListAddressMock>;
    getContractAt(
      name: "DoublyLinkedListBytes32Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoublyLinkedListBytes32Mock>;
    getContractAt(
      name: "DoublyLinkedListUint256Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoublyLinkedListUint256Mock>;
    getContractAt(
      name: "EnumerableMap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableMap>;
    getContractAt(
      name: "EnumerableMapAddressToAddressMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableMapAddressToAddressMock>;
    getContractAt(
      name: "EnumerableMapUintToAddressMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableMapUintToAddressMock>;
    getContractAt(
      name: "EnumerableSet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableSet>;
    getContractAt(
      name: "EnumerableSetAddressMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableSetAddressMock>;
    getContractAt(
      name: "EnumerableSetBytes32Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableSetBytes32Mock>;
    getContractAt(
      name: "EnumerableSetUintMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnumerableSetUintMock>;
    getContractAt(
      name: "IncrementalMerkleTreeMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IncrementalMerkleTreeMock>;
    getContractAt(
      name: "Diamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IDiamondCut",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "LibDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "DiamondInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondInit>;
    getContractAt(
      name: "IInitializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInitializable>;
    getContractAt(
      name: "IInitializableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInitializableInternal>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "InitializableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableInternal>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC165Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Internal>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC165Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Internal>;
    getContractAt(
      name: "Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Context>;
    getContractAt(
      name: "ContextInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextInternal>;
    getContractAt(
      name: "ERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771Context>;
    getContractAt(
      name: "ERC2771ContextInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextInternal>;
    getContractAt(
      name: "IERC2771Context",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2771Context>;
    getContractAt(
      name: "Package",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Package>;
    getContractAt(
      name: "PackageInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PackageInternal>;
    getContractAt(
      name: "DiamondBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondBase>;
    getContractAt(
      name: "IDiamondBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondBase>;
    getContractAt(
      name: "DiamondReadable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondReadable>;
    getContractAt(
      name: "IDiamondReadable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondReadable>;
    getContractAt(
      name: "DiamondWritable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondWritable>;
    getContractAt(
      name: "DiamondWritableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondWritableInternal>;
    getContractAt(
      name: "IDiamondWritable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondWritable>;
    getContractAt(
      name: "IDiamondWritableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondWritableInternal>;
    getContractAt(
      name: "IProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IProxy>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ISmartContractAccessManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartContractAccessManagement>;
    getContractAt(
      name: "ISmartContractAccessManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartContractAccessManagementInternal>;
    getContractAt(
      name: "SmartContractAccessManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SmartContractAccessManagement>;
    getContractAt(
      name: "SmartContractAccessManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SmartContractAccessManagementInternal>;
    getContractAt(
      name: "Coupon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Coupon>;
    getContractAt(
      name: "ICoupon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICoupon>;
    getContractAt(
      name: "IRedemption",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRedemption>;
    getContractAt(
      name: "Redemption",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Redemption>;
    getContractAt(
      name: "DelegateInvestorManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DelegateInvestorManagement>;
    getContractAt(
      name: "DelegateInvestorManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DelegateInvestorManagementInternal>;
    getContractAt(
      name: "IDelegateInvestorManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegateInvestorManagement>;
    getContractAt(
      name: "IDelegateInvestorManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegateInvestorManagementInternal>;
    getContractAt(
      name: "IInvestorManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInvestorManagement>;
    getContractAt(
      name: "IInvestorManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInvestorManagementInternal>;
    getContractAt(
      name: "InvestorManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InvestorManagement>;
    getContractAt(
      name: "InvestorManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InvestorManagementInternal>;
    getContractAt(
      name: "IRegister",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegister>;
    getContractAt(
      name: "IRegisterDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterDiamond>;
    getContractAt(
      name: "IRegisterMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterMetadata>;
    getContractAt(
      name: "IRegisterMetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterMetadataInternal>;
    getContractAt(
      name: "RegisterMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterMetadata>;
    getContractAt(
      name: "RegisterMetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterMetadataInternal>;
    getContractAt(
      name: "RegisterDiamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterDiamond>;
    getContractAt(
      name: "RegisterDiamondReadable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterDiamondReadable>;
    getContractAt(
      name: "RegisterDiamondWritable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterDiamondWritable>;
    getContractAt(
      name: "IRegisterRoleManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterRoleManagement>;
    getContractAt(
      name: "IRegisterRoleManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterRoleManagementInternal>;
    getContractAt(
      name: "RegisterRoleManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterRoleManagement>;
    getContractAt(
      name: "RegisterRoleManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegisterRoleManagementInternal>;
    getContractAt(
      name: "CouponSnapshotManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CouponSnapshotManagement>;
    getContractAt(
      name: "CouponSnapshotManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CouponSnapshotManagementInternal>;
    getContractAt(
      name: "ICouponSnapshotManagement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICouponSnapshotManagement>;
    getContractAt(
      name: "ICouponSnapshotManagementInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICouponSnapshotManagementInternal>;
    getContractAt(
      name: "IPausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausable>;
    getContractAt(
      name: "IPausableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausableInternal>;
    getContractAt(
      name: "IReentrancyGuardInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IReentrancyGuardInternal>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "PausableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableInternal>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "ReentrancyGuardInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardInternal>;
    getContractAt(
      name: "ERC1155Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Base>;
    getContractAt(
      name: "ERC1155BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155BaseInternal>;
    getContractAt(
      name: "IERC1155Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Base>;
    getContractAt(
      name: "IERC1155BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155BaseInternal>;
    getContractAt(
      name: "ERC1155Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Enumerable>;
    getContractAt(
      name: "ERC1155EnumerableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155EnumerableInternal>;
    getContractAt(
      name: "ERC1155Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Metadata>;
    getContractAt(
      name: "ERC1155MetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MetadataInternal>;
    getContractAt(
      name: "IERC1155Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Enumerable>;
    getContractAt(
      name: "IERC1155EnumerableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155EnumerableInternal>;
    getContractAt(
      name: "IERC1155Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Metadata>;
    getContractAt(
      name: "IERC1155MetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataInternal>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Internal>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "ERC20BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BaseInternal>;
    getContractAt(
      name: "IERC20Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Base>;
    getContractAt(
      name: "IERC20BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20BaseInternal>;
    getContractAt(
      name: "ERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20BurnableInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20BurnableInternal>;
    getContractAt(
      name: "ERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Metadata>;
    getContractAt(
      name: "ERC20Snapshot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Snapshot>;
    getContractAt(
      name: "ERC20SnapshotInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20SnapshotInternal>;
    getContractAt(
      name: "IERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Snapshot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Snapshot>;
    getContractAt(
      name: "IERC20SnapshotInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20SnapshotInternal>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Internal>;
    getContractAt(
      name: "ERC721Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BaseInternal>;
    getContractAt(
      name: "IERC721Base",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Base>;
    getContractAt(
      name: "IERC721BaseInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721BaseInternal>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: "ERC721MetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MetadataInternal>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721MetadataInternal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataInternal>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Internal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Internal>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "BilateralTrade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BilateralTrade>;
    getContractAt(
      name: "IBilateralTrade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBilateralTrade>;
    getContractAt(
      name: "IPrimaryIssuance",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrimaryIssuance>;
    getContractAt(
      name: "PrimaryIssuance",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimaryIssuance>;
    getContractAt(
      name: "ITrade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITrade>;
    getContractAt(
      name: "AddressUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressUtils>;
    getContractAt(
      name: "AddressUtilsMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressUtilsMock>;
    getContractAt(
      name: "ArrayUtilsMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayUtilsMock>;
    getContractAt(
      name: "IMulticall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "MathMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MathMock>;
    getContractAt(
      name: "Multicall",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "MulticallMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MulticallMock>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "UintUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UintUtils>;
    getContractAt(
      name: "UintUtilsMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UintUtilsMock>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IERC173Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173Internal>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IOwnableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnableInternal>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "OwnableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableInternal>;
    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlInternal>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IAccessControlInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlInternal>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "ECDSAMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSAMock>;
    deployContract(
      name: "EIP712Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Mock>;
    deployContract(
      name: "MerkleProofMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MerkleProofMock>;
    deployContract(
      name: "BinaryHeapAddressMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapAddressMock>;
    deployContract(
      name: "BinaryHeapBytes32Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapBytes32Mock>;
    deployContract(
      name: "BinaryHeapUintMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapUintMock>;
    deployContract(
      name: "DoublyLinkedList",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedList>;
    deployContract(
      name: "DoublyLinkedListAddressMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListAddressMock>;
    deployContract(
      name: "DoublyLinkedListBytes32Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListBytes32Mock>;
    deployContract(
      name: "DoublyLinkedListUint256Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListUint256Mock>;
    deployContract(
      name: "EnumerableMap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMap>;
    deployContract(
      name: "EnumerableMapAddressToAddressMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMapAddressToAddressMock>;
    deployContract(
      name: "EnumerableMapUintToAddressMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMapUintToAddressMock>;
    deployContract(
      name: "EnumerableSet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSet>;
    deployContract(
      name: "EnumerableSetAddressMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetAddressMock>;
    deployContract(
      name: "EnumerableSetBytes32Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetBytes32Mock>;
    deployContract(
      name: "EnumerableSetUintMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetUintMock>;
    deployContract(
      name: "IncrementalMerkleTreeMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IncrementalMerkleTreeMock>;
    deployContract(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Diamond>;
    deployContract(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondCutFacet>;
    deployContract(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacet>;
    deployContract(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnershipFacet>;
    deployContract(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibDiamond>;
    deployContract(
      name: "DiamondInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondInit>;
    deployContract(
      name: "IInitializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInitializable>;
    deployContract(
      name: "IInitializableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInitializableInternal>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "InitializableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InitializableInternal>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "ERC165Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Internal>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC165Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Internal>;
    deployContract(
      name: "Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Context>;
    deployContract(
      name: "ContextInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextInternal>;
    deployContract(
      name: "ERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextInternal>;
    deployContract(
      name: "IERC2771Context",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "Package",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Package>;
    deployContract(
      name: "PackageInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PackageInternal>;
    deployContract(
      name: "DiamondBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondBase>;
    deployContract(
      name: "IDiamondBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondBase>;
    deployContract(
      name: "DiamondReadable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondReadable>;
    deployContract(
      name: "IDiamondReadable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondReadable>;
    deployContract(
      name: "DiamondWritable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWritable>;
    deployContract(
      name: "DiamondWritableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWritableInternal>;
    deployContract(
      name: "IDiamondWritable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondWritable>;
    deployContract(
      name: "IDiamondWritableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondWritableInternal>;
    deployContract(
      name: "IProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IProxy>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ISmartContractAccessManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISmartContractAccessManagement>;
    deployContract(
      name: "ISmartContractAccessManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISmartContractAccessManagementInternal>;
    deployContract(
      name: "SmartContractAccessManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartContractAccessManagement>;
    deployContract(
      name: "SmartContractAccessManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartContractAccessManagementInternal>;
    deployContract(
      name: "Coupon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Coupon>;
    deployContract(
      name: "ICoupon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICoupon>;
    deployContract(
      name: "IRedemption",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRedemption>;
    deployContract(
      name: "Redemption",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Redemption>;
    deployContract(
      name: "DelegateInvestorManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelegateInvestorManagement>;
    deployContract(
      name: "DelegateInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelegateInvestorManagementInternal>;
    deployContract(
      name: "IDelegateInvestorManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelegateInvestorManagement>;
    deployContract(
      name: "IDelegateInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelegateInvestorManagementInternal>;
    deployContract(
      name: "IInvestorManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInvestorManagement>;
    deployContract(
      name: "IInvestorManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInvestorManagementInternal>;
    deployContract(
      name: "InvestorManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InvestorManagement>;
    deployContract(
      name: "InvestorManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InvestorManagementInternal>;
    deployContract(
      name: "IRegister",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegister>;
    deployContract(
      name: "IRegisterDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterDiamond>;
    deployContract(
      name: "IRegisterMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterMetadata>;
    deployContract(
      name: "IRegisterMetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterMetadataInternal>;
    deployContract(
      name: "RegisterMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterMetadata>;
    deployContract(
      name: "RegisterMetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterMetadataInternal>;
    deployContract(
      name: "RegisterDiamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamond>;
    deployContract(
      name: "RegisterDiamondReadable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamondReadable>;
    deployContract(
      name: "RegisterDiamondWritable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamondWritable>;
    deployContract(
      name: "IRegisterRoleManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterRoleManagement>;
    deployContract(
      name: "IRegisterRoleManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterRoleManagementInternal>;
    deployContract(
      name: "RegisterRoleManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterRoleManagement>;
    deployContract(
      name: "RegisterRoleManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterRoleManagementInternal>;
    deployContract(
      name: "CouponSnapshotManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CouponSnapshotManagement>;
    deployContract(
      name: "CouponSnapshotManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CouponSnapshotManagementInternal>;
    deployContract(
      name: "ICouponSnapshotManagement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICouponSnapshotManagement>;
    deployContract(
      name: "ICouponSnapshotManagementInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICouponSnapshotManagementInternal>;
    deployContract(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausable>;
    deployContract(
      name: "IPausableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausableInternal>;
    deployContract(
      name: "IReentrancyGuardInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IReentrancyGuardInternal>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "PausableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableInternal>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ReentrancyGuardInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardInternal>;
    deployContract(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Base>;
    deployContract(
      name: "ERC1155BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BaseInternal>;
    deployContract(
      name: "IERC1155Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Base>;
    deployContract(
      name: "IERC1155BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155BaseInternal>;
    deployContract(
      name: "ERC1155Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Enumerable>;
    deployContract(
      name: "ERC1155EnumerableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155EnumerableInternal>;
    deployContract(
      name: "ERC1155Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Metadata>;
    deployContract(
      name: "ERC1155MetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155MetadataInternal>;
    deployContract(
      name: "IERC1155Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Enumerable>;
    deployContract(
      name: "IERC1155EnumerableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155EnumerableInternal>;
    deployContract(
      name: "IERC1155Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Metadata>;
    deployContract(
      name: "IERC1155MetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataInternal>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Internal>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Base>;
    deployContract(
      name: "ERC20BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BaseInternal>;
    deployContract(
      name: "IERC20Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Base>;
    deployContract(
      name: "IERC20BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20BaseInternal>;
    deployContract(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20BurnableInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BurnableInternal>;
    deployContract(
      name: "ERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Metadata>;
    deployContract(
      name: "ERC20Snapshot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Snapshot>;
    deployContract(
      name: "ERC20SnapshotInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SnapshotInternal>;
    deployContract(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Burnable>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Snapshot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Snapshot>;
    deployContract(
      name: "IERC20SnapshotInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20SnapshotInternal>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Internal>;
    deployContract(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Base>;
    deployContract(
      name: "ERC721BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721BaseInternal>;
    deployContract(
      name: "IERC721Base",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Base>;
    deployContract(
      name: "IERC721BaseInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721BaseInternal>;
    deployContract(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Metadata>;
    deployContract(
      name: "ERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721MetadataInternal>;
    deployContract(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataInternal>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Internal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Internal>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "BilateralTrade",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BilateralTrade>;
    deployContract(
      name: "IBilateralTrade",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBilateralTrade>;
    deployContract(
      name: "IPrimaryIssuance",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimaryIssuance>;
    deployContract(
      name: "PrimaryIssuance",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimaryIssuance>;
    deployContract(
      name: "ITrade",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITrade>;
    deployContract(
      name: "AddressUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressUtils>;
    deployContract(
      name: "AddressUtilsMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressUtilsMock>;
    deployContract(
      name: "ArrayUtilsMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayUtilsMock>;
    deployContract(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "MathMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MathMock>;
    deployContract(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "MulticallMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MulticallMock>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "UintUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UintUtils>;
    deployContract(
      name: "UintUtilsMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UintUtilsMock>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "ERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IERC173Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173Internal>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IOwnableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnableInternal>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "OwnableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableInternal>;
    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "AccessControlInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlInternal>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IAccessControlInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControlInternal>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "ECDSAMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSAMock>;
    deployContract(
      name: "EIP712Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Mock>;
    deployContract(
      name: "MerkleProofMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MerkleProofMock>;
    deployContract(
      name: "BinaryHeapAddressMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapAddressMock>;
    deployContract(
      name: "BinaryHeapBytes32Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapBytes32Mock>;
    deployContract(
      name: "BinaryHeapUintMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BinaryHeapUintMock>;
    deployContract(
      name: "DoublyLinkedList",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedList>;
    deployContract(
      name: "DoublyLinkedListAddressMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListAddressMock>;
    deployContract(
      name: "DoublyLinkedListBytes32Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListBytes32Mock>;
    deployContract(
      name: "DoublyLinkedListUint256Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoublyLinkedListUint256Mock>;
    deployContract(
      name: "EnumerableMap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMap>;
    deployContract(
      name: "EnumerableMapAddressToAddressMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMapAddressToAddressMock>;
    deployContract(
      name: "EnumerableMapUintToAddressMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableMapUintToAddressMock>;
    deployContract(
      name: "EnumerableSet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSet>;
    deployContract(
      name: "EnumerableSetAddressMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetAddressMock>;
    deployContract(
      name: "EnumerableSetBytes32Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetBytes32Mock>;
    deployContract(
      name: "EnumerableSetUintMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnumerableSetUintMock>;
    deployContract(
      name: "IncrementalMerkleTreeMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IncrementalMerkleTreeMock>;
    deployContract(
      name: "Diamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Diamond>;
    deployContract(
      name: "DiamondCutFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondCutFacet>;
    deployContract(
      name: "DiamondLoupeFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondLoupeFacet>;
    deployContract(
      name: "OwnershipFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnershipFacet>;
    deployContract(
      name: "IDiamondCut",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "IDiamondLoupe",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "LibDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibDiamond>;
    deployContract(
      name: "DiamondInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondInit>;
    deployContract(
      name: "IInitializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInitializable>;
    deployContract(
      name: "IInitializableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInitializableInternal>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "InitializableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InitializableInternal>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "ERC165Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Internal>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC165Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Internal>;
    deployContract(
      name: "Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Context>;
    deployContract(
      name: "ContextInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextInternal>;
    deployContract(
      name: "ERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771Context>;
    deployContract(
      name: "ERC2771ContextInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2771ContextInternal>;
    deployContract(
      name: "IERC2771Context",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2771Context>;
    deployContract(
      name: "Package",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Package>;
    deployContract(
      name: "PackageInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PackageInternal>;
    deployContract(
      name: "DiamondBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondBase>;
    deployContract(
      name: "IDiamondBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondBase>;
    deployContract(
      name: "DiamondReadable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondReadable>;
    deployContract(
      name: "IDiamondReadable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondReadable>;
    deployContract(
      name: "DiamondWritable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWritable>;
    deployContract(
      name: "DiamondWritableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWritableInternal>;
    deployContract(
      name: "IDiamondWritable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondWritable>;
    deployContract(
      name: "IDiamondWritableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondWritableInternal>;
    deployContract(
      name: "IProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IProxy>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ISmartContractAccessManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISmartContractAccessManagement>;
    deployContract(
      name: "ISmartContractAccessManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISmartContractAccessManagementInternal>;
    deployContract(
      name: "SmartContractAccessManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartContractAccessManagement>;
    deployContract(
      name: "SmartContractAccessManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SmartContractAccessManagementInternal>;
    deployContract(
      name: "Coupon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Coupon>;
    deployContract(
      name: "ICoupon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICoupon>;
    deployContract(
      name: "IRedemption",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRedemption>;
    deployContract(
      name: "Redemption",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Redemption>;
    deployContract(
      name: "DelegateInvestorManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelegateInvestorManagement>;
    deployContract(
      name: "DelegateInvestorManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DelegateInvestorManagementInternal>;
    deployContract(
      name: "IDelegateInvestorManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelegateInvestorManagement>;
    deployContract(
      name: "IDelegateInvestorManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDelegateInvestorManagementInternal>;
    deployContract(
      name: "IInvestorManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInvestorManagement>;
    deployContract(
      name: "IInvestorManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInvestorManagementInternal>;
    deployContract(
      name: "InvestorManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InvestorManagement>;
    deployContract(
      name: "InvestorManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InvestorManagementInternal>;
    deployContract(
      name: "IRegister",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegister>;
    deployContract(
      name: "IRegisterDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterDiamond>;
    deployContract(
      name: "IRegisterMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterMetadata>;
    deployContract(
      name: "IRegisterMetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterMetadataInternal>;
    deployContract(
      name: "RegisterMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterMetadata>;
    deployContract(
      name: "RegisterMetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterMetadataInternal>;
    deployContract(
      name: "RegisterDiamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamond>;
    deployContract(
      name: "RegisterDiamondReadable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamondReadable>;
    deployContract(
      name: "RegisterDiamondWritable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterDiamondWritable>;
    deployContract(
      name: "IRegisterRoleManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterRoleManagement>;
    deployContract(
      name: "IRegisterRoleManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterRoleManagementInternal>;
    deployContract(
      name: "RegisterRoleManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterRoleManagement>;
    deployContract(
      name: "RegisterRoleManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegisterRoleManagementInternal>;
    deployContract(
      name: "CouponSnapshotManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CouponSnapshotManagement>;
    deployContract(
      name: "CouponSnapshotManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CouponSnapshotManagementInternal>;
    deployContract(
      name: "ICouponSnapshotManagement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICouponSnapshotManagement>;
    deployContract(
      name: "ICouponSnapshotManagementInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICouponSnapshotManagementInternal>;
    deployContract(
      name: "IPausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausable>;
    deployContract(
      name: "IPausableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausableInternal>;
    deployContract(
      name: "IReentrancyGuardInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IReentrancyGuardInternal>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "PausableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PausableInternal>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ReentrancyGuardInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuardInternal>;
    deployContract(
      name: "ERC1155Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Base>;
    deployContract(
      name: "ERC1155BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155BaseInternal>;
    deployContract(
      name: "IERC1155Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Base>;
    deployContract(
      name: "IERC1155BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155BaseInternal>;
    deployContract(
      name: "ERC1155Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Enumerable>;
    deployContract(
      name: "ERC1155EnumerableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155EnumerableInternal>;
    deployContract(
      name: "ERC1155Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Metadata>;
    deployContract(
      name: "ERC1155MetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155MetadataInternal>;
    deployContract(
      name: "IERC1155Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Enumerable>;
    deployContract(
      name: "IERC1155EnumerableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155EnumerableInternal>;
    deployContract(
      name: "IERC1155Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Metadata>;
    deployContract(
      name: "IERC1155MetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataInternal>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Internal>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Base>;
    deployContract(
      name: "ERC20BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BaseInternal>;
    deployContract(
      name: "IERC20Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Base>;
    deployContract(
      name: "IERC20BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20BaseInternal>;
    deployContract(
      name: "ERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20BurnableInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20BurnableInternal>;
    deployContract(
      name: "ERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Metadata>;
    deployContract(
      name: "ERC20Snapshot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Snapshot>;
    deployContract(
      name: "ERC20SnapshotInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20SnapshotInternal>;
    deployContract(
      name: "IERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Burnable>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Snapshot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Snapshot>;
    deployContract(
      name: "IERC20SnapshotInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20SnapshotInternal>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Internal>;
    deployContract(
      name: "ERC721Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Base>;
    deployContract(
      name: "ERC721BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721BaseInternal>;
    deployContract(
      name: "IERC721Base",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Base>;
    deployContract(
      name: "IERC721BaseInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721BaseInternal>;
    deployContract(
      name: "ERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "ERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Metadata>;
    deployContract(
      name: "ERC721MetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721MetadataInternal>;
    deployContract(
      name: "IERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721MetadataInternal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataInternal>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Internal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Internal>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "BilateralTrade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BilateralTrade>;
    deployContract(
      name: "IBilateralTrade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBilateralTrade>;
    deployContract(
      name: "IPrimaryIssuance",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPrimaryIssuance>;
    deployContract(
      name: "PrimaryIssuance",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrimaryIssuance>;
    deployContract(
      name: "ITrade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITrade>;
    deployContract(
      name: "AddressUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressUtils>;
    deployContract(
      name: "AddressUtilsMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressUtilsMock>;
    deployContract(
      name: "ArrayUtilsMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayUtilsMock>;
    deployContract(
      name: "IMulticall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMulticall>;
    deployContract(
      name: "MathMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MathMock>;
    deployContract(
      name: "Multicall",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall>;
    deployContract(
      name: "MulticallMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MulticallMock>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "UintUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UintUtils>;
    deployContract(
      name: "UintUtilsMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UintUtilsMock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
