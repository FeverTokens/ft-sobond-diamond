/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC20SnapshotInternal,
  IERC20SnapshotInternalInterface,
} from "../../../../../src/token/ERC20/extensions/IERC20SnapshotInternal";

const _abi = [
  {
    inputs: [],
    name: "ERC20Snapshot__SnapshotIdDoesNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC20Snapshot__SnapshotIdIsZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
] as const;

export class IERC20SnapshotInternal__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20SnapshotInternalInterface {
    return new Interface(_abi) as IERC20SnapshotInternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC20SnapshotInternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IERC20SnapshotInternal;
  }
}
