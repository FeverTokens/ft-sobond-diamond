/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IInvestorManagementInternal,
  IInvestorManagementInternalInterface,
} from "../../../../src/register/investors/IInvestorManagementInternal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "DisableInvestor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "EnableInvestor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "toBeAdded",
        type: "address",
      },
    ],
    name: "WalletAddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "toBeDeleted",
        type: "address",
      },
    ],
    name: "WalletDeletedFromWhitelist",
    type: "event",
  },
] as const;

export class IInvestorManagementInternal__factory {
  static readonly abi = _abi;
  static createInterface(): IInvestorManagementInternalInterface {
    return new Interface(_abi) as IInvestorManagementInternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IInvestorManagementInternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IInvestorManagementInternal;
  }
}
