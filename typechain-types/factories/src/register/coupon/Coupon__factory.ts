/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Coupon,
  CouponInterface,
} from "../../../../src/register/coupon/Coupon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registerContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_couponDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nbDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_recordDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cutOfTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IRegister",
        name: "register",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "couponDate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum ICoupon.CouponStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "CouponChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IRegister",
        name: "register",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "couponDate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ICoupon.PaymentStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum ICoupon.PaymentStatus",
        name: "previousStatus",
        type: "uint8",
      },
    ],
    name: "CouponPaymentStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "couponDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cutOfTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "getInvestorPayments",
    outputs: [
      {
        internalType: "enum ICoupon.PaymentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "getPaymentAmountForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPaymentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investorPayments",
    outputs: [
      {
        internalType: "enum ICoupon.PaymentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nbDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payingAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "paymentIdForInvest",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recordDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "contract IRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rejectCoupon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_recordDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cutOfTime",
        type: "uint256",
      },
    ],
    name: "setCutOffTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setDateAsCurrentCoupon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nbDays",
        type: "uint256",
      },
    ],
    name: "setNbDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum ICoupon.CouponStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "toggleCouponPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604090808252346200026b5760a081620014f4803803809162000025828562000270565b8339810103126200026b5780516001600160a01b03808216918290036200026b57602080840151928585015194608060608201519101516000966001885560018060a01b03199484866007541617600755848660085416176008558951946338e5975560e21b865260049533878201528281602481855afa90811562000261578b916200023f575b5015620001ea57818a9160248b8e5194859384926338e20fc560e11b84528c8401525af1908115620001e0578a91620001ac575b50156200016a5750866001556002556201518091828106810390811162000157576003550690553390600554161760055560ff60a01b1960085416600855600754169251927fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb7608380a461122f9081620002c58239f35b634e487b7160e01b885260118452602488fd5b846064918b519162461bcd60e51b8352820152601f60248201527f7468697320636f75706f6e4461746520646f6573206e6f7420657869737473006044820152fd5b620001d19150823d8411620001d8575b620001c8818362000270565b810190620002aa565b38620000e1565b503d620001bc565b8b513d8c823e3d90fd5b8a5162461bcd60e51b8152808701839052602960248201527f53656e646572206d757374206265206120506179696e672063616c63756c61746044820152681a5bdb881859d95b9d60ba1b6064820152608490fd5b6200025a9150833d8511620001d857620001c8818362000270565b38620000ad565b8c513d8d823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200029457604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126200026b575180151581036200026b579056fe6080604081815260048036101561001557600080fd5b600092833560e01c9081631aa3a0081461103c57508063200d2ed214610ff957806323bfa0f014610ead57806350cc453214610e8e578063532e91cc14610df95780635e4795a914610dd05780636969a06f14610ae157806369fb125e146109515780637c610024146108b957806386d49f771461089a578063c4fa96b014610877578063ccc5d7e9146102a6578063d64c0587146102e9578063d927a606146102a6578063f4bcf209146101ed578063f68a3ab4146100fe5763fd3b4442146100de57600080fd5b346100fa57826003193601126100fa5760209250549051908152f35b8280fd5b5090346100fa57806003193601126100fa5760075481516338e5975560e21b8152338185015283359291602090829060249082906001600160a01b03165afa9182156101e45750906101579185916101b6575b506110d4565b60ff60085460a01c1660058110156101a3576101739015611132565b620151809081810681039081116101905760035560243506905580f35b634e487b7160e01b845260118352602484fd5b634e487b7160e01b845260218352602484fd5b6101d7915060203d81116101dd575b6101cf8183611084565b8101906110bc565b38610151565b503d6101c5565b513d86823e3d90fd5b5090346100fa57826003193601126100fa5760075481516338e5975560e21b815233848201526001600160a01b039091169190602081602481865afa9182156101e45750906102429185916101b657506110d4565b600160a11b60ff60a01b196008541617908160085560ff6001549260a01c1692600584101561029357507fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb7608480a480f35b634e487b7160e01b855260219052602484fd5b50346100fa5760203660031901126100fa57356001600160a01b038116908190036100fa5760ff82846102e793602096526009865220541691518092611061565bf35b50346100fa5760209081600319360112610873576001600160a01b0381358181169491939085900361086f57836007541682519463c41251a160e01b8652868587015260249583818881865afa908115610865578991610848575b50156108065760ff908160085460a01c169560058710156107f45760018097036107a157888a5260099788865283878c2054169487516321b0fc9560e11b8152338482015287818481855afa90811561077a578d91610784575b50156105325750898b5288865283878c20541660038110156105205761046f5760065442111561041f5750509161041b916000805160206111da833981519152959493898b52888552858b208860ff198254161790555b60075416965497898b528452848a2054169261041385518095611061565b830190611061565ba480f35b865162461bcd60e51b81529182018690526025908201527f74686520636f75706f6e20637574206f662074696d6520686173206e6f742070604482015264185cdcd95960da1b6064820152608490fd5b898b5288865283878c20541660038110156105205788036104b95750509161041b916000805160206111da833981519152959493898b52888552858b2060ff1981541690556103f5565b865162461bcd60e51b815291820186905281018690527f54686520737461747573206f66207468697320696e766573746f72277320706160448201527f796d656e742073686f756c642062652050616964206f7220546f4265506169646064820152608490fd5b50634e487b7160e01b8b52602182528afd5b8751630d72032360e21b8152338482015287818481855afa90811561077a578d9161075d575b501561070057868b838a51809481936308f92f4960e41b8352888301525afa9081156106f6578c916106bc575b50833391160361066b57898b5288865283878c20541660038110156105205788036105dc5750509161041b916000805160206111da833981519152959493898b52888552858b20600260ff198254161790556103f5565b898b5288865283878c2054166003811015610520576002036106295750509161041b916000805160206111da833981519152959493898b52888552858b208860ff198254161790556103f5565b865162461bcd60e51b8152918201869052601d908201527f496e76616c696420436f75706f6e207061796d656e74207374617475730000006044820152606490fd5b865162461bcd60e51b81529182018690526026908201527f596f7520617265206e6f7420637573746f6469616e206f66207468697320696e6044820152653b32b9ba37b960d11b6064820152608490fd5b90508681813d83116106ef575b6106d38183611084565b810103126106eb575183811681036106eb5738610585565b8b80fd5b503d6106c9565b88513d8e823e3d90fd5b875162461bcd60e51b81528084018890526032818401527f73656e646572206d7573742062652043656e7472616c204163636f756e74204b60448201527132b2b832b91037b91021bab9ba37b234b0b760711b6064820152608490fd5b6107749150883d8a116101dd576101cf8183611084565b38610558565b89513d8f823e3d90fd5b61079b9150883d8a116101dd576101cf8183611084565b3861039e565b855162461bcd60e51b81529081018590526028818901527f54686520737461747573206f662074686520636f75706f6e2073686f756c6420604482015267626520526561647960c01b6064820152608490fd5b634e487b7160e01b8a52602190528689fd5b835162461bcd60e51b8152808601849052601c818801527f5468697320696e766573746f72206973206e6f7420616c6c6f776564000000006044820152606490fd5b61085f9150843d86116101dd576101cf8183611084565b38610344565b85513d8b823e3d90fd5b8580fd5b8380fd5b5050346108965781600319360112610896576020906001549051908152f35b5080fd5b5050346108965781600319360112610896576020906002549051908152f35b50346100fa5760203660031901126100fa5760075482516338e5975560e21b8152338382015290602090829060249082906001600160a01b03165afa9081156109445761090e92935084916101b657506110d4565b60ff60085460a01c1660058110156109315761092a9015611132565b3560025580f35b634e487b7160e01b835260218252602483fd5b50505051903d90823e3d90fd5b50346100fa5760209283600319360112610ade576001600160a01b038235818116908190036100fa5760075485516329fcbdbb60e21b81529290811687848781845afa938415610aa2578693929189918796610aac575b508851630e409fdf60e21b815297889182905afa958615610aa257908892918697610a6f575b50604490600854169360015494895195869485936307b2d9e360e01b855284015260248301525afa928315610a645792610a2e575b5061016892610a18610a2693610a1d936111b0565b6111b0565b600254906111b0565b049051908152f35b91508482813d8311610a5d575b610a458183611084565b81010312610a5857905190610168610a03565b600080fd5b503d610a3b565b8551903d90823e3d90fd5b8381949298503d8311610a9b575b610a878183611084565b81010312610a5857604488925196906109ce565b503d610a7d565b87513d87823e3d90fd5b9450945083813d8311610ad7575b610ac48183611084565b81010312610a58578786935194386109a8565b503d610aba565b80fd5b5090346100fa57826003193601126100fa576002835414610d8d576002835560075481516338e5975560e21b815233848201526001600160a01b03926024926020929085169083818681855afa908115610d835790610b46918991610d6c57506110d4565b60ff60085460a01c166005811015610d5a578791610b65859215611132565b85600154855194859384926338e20fc560e11b84528c8401525af1908115610ce0578791610d3d575b5015610cfc5783600754166001546003549087548201809211610cea57908891833b156100fa576044908386519586948593630c14a5d360e21b85528d8501528a8401525af18015610ce057610cb3575b506008548151634f7cc36f60e11b81529092808288818988165afa928315610caa57508792610c7c575b505060065560ff60a01b1916600160a01b17600881905560075460015460a09290921c60ff169491931691906005851015610c6b5750507fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb7608480a46001815580f35b634e487b7160e01b86526021905284fd5b90809250813d8311610ca3575b610c938183611084565b81010312610a5857513880610c09565b503d610c89565b513d89823e3d90fd5b67ffffffffffffffff8197929711610cce5786529438610bdf565b634e487b7160e01b8252604186528382fd5b82513d89823e3d90fd5b634e487b7160e01b8952601188528589fd5b5162461bcd60e51b815293840152601f90830152507f7468697320636f75706f6e4461746520646f6573206e6f742065786973747300604482015260649150fd5b610d549150833d85116101dd576101cf8183611084565b38610b8e565b634e487b7160e01b8852602187528488fd5b6101d79150853d87116101dd576101cf8183611084565b83513d8a823e3d90fd5b906020606492519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b50503461089657816003193601126108965760055490516001600160a01b039091168152602090f35b509190346108965760203660031901126108965782356001600160a01b03811681036100fa5781519160208301913060601b83526bffffffffffffffffffffffff199060601b16603484015260288352606083019383851067ffffffffffffffff861117610e7b5750839052905190206001600160c01b031916815260209150f35b634e487b7160e01b815260418652602490fd5b5050346108965781600319360112610896576020906003549051908152f35b509134610ade5780600319360112610ade5760075482516329fcbdbb60e21b81526020946001600160a01b03909216929185828281875afa918215610fef578392610fc0575b508451630e409fdf60e21b81529386858381845afa948515610fb6579087918596610f85575b5086516318160ddd60e01b815292839182905afa928315610a64578093610f51575b505061016892610a18610a2693610a1d936111b0565b909192508582813d8311610f7e575b610f6a8183611084565b81010312610ade5750519082610a18610f3b565b503d610f60565b8281939297503d8311610faf575b610f9d8183611084565b81010312610873578690519438610f19565b503d610f93565b86513d86823e3d90fd5b9091508581813d8311610fe8575b610fd88183611084565b810103126100fa57519038610ef3565b503d610fce565b85513d85823e3d90fd5b5091903461089657816003193601126108965760ff60085460a01c16905191600582101561102957602083838152f35b634e487b7160e01b815260218452602490fd5b8490346108965781600319360112610896576007546001600160a01b03168152602090f35b90600382101561106e5752565b634e487b7160e01b600052602160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176110a657604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610a5857518015158103610a585790565b156110db57565b60405162461bcd60e51b815260206004820152602960248201527f53656e646572206d757374206265206120506179696e672063616c63756c61746044820152681a5bdb881859d95b9d60ba1b6064820152608490fd5b1561113957565b60a460405162461bcd60e51b815260206004820152604460248201527f54686520636f75706f6e20646174652063616e206265206d6f6469666965642060448201527f6f6e6c792069662074686520636f6e74726163742073746174757320697320446064820152631c98599d60e21b6084820152fd5b818102929181159184041417156111c357565b634e487b7160e01b600052601160045260246000fdfe71a813fb36e2b43b4fcd5b541937f3501c4bb733759aa470d700efb9b7fd5b14a264697066735822122011acd170b2a8005e8bdee9e8a263d0697ad65a4620adfeb47bfe70f95490fd1d64736f6c63430008140033";

type CouponConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouponConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Coupon__factory extends ContractFactory {
  constructor(...args: CouponConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registerContract: AddressLike,
    _couponDate: BigNumberish,
    _nbDays: BigNumberish,
    _recordDate: BigNumberish,
    _cutOfTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _registerContract,
      _couponDate,
      _nbDays,
      _recordDate,
      _cutOfTime,
      overrides || {}
    );
  }
  override deploy(
    _registerContract: AddressLike,
    _couponDate: BigNumberish,
    _nbDays: BigNumberish,
    _recordDate: BigNumberish,
    _cutOfTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _registerContract,
      _couponDate,
      _nbDays,
      _recordDate,
      _cutOfTime,
      overrides || {}
    ) as Promise<
      Coupon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Coupon__factory {
    return super.connect(runner) as Coupon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouponInterface {
    return new Interface(_abi) as CouponInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Coupon {
    return new Contract(address, _abi, runner) as unknown as Coupon;
  }
}
