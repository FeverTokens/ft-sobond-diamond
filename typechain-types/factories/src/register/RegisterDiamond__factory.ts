/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RegisterDiamond,
  RegisterDiamondInterface,
} from "../../../src/register/RegisterDiamond";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_diamondReadablePackage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_diamondWritablePackage",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_initData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DiamondWritable__InvalidInitializationParameters",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__RemoveTargetNotZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__ReplaceTargetIsIdentical",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__SelectorAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__SelectorIsImmutable",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__SelectorNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__SelectorNotSpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "DiamondWritable__TargetHasNoCode",
    type: "error",
  },
  {
    inputs: [],
    name: "Proxy__ImplementationIsNotContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "enum IDiamondWritableInternal.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondWritableInternal.FacetCut[]",
        name: "facetCuts",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "test",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "enum IDiamondWritableInternal.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondWritableInternal.FacetCut[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type RegisterDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegisterDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegisterDiamond__factory extends ContractFactory {
  constructor(...args: RegisterDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _diamondReadablePackage: AddressLike,
    _diamondWritablePackage: AddressLike,
    _initData: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _diamondReadablePackage,
      _diamondWritablePackage,
      _initData,
      overrides || {}
    );
  }
  override deploy(
    _diamondReadablePackage: AddressLike,
    _diamondWritablePackage: AddressLike,
    _initData: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _diamondReadablePackage,
      _diamondWritablePackage,
      _initData,
      overrides || {}
    ) as Promise<
      RegisterDiamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RegisterDiamond__factory {
    return super.connect(runner) as RegisterDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegisterDiamondInterface {
    return new Interface(_abi) as RegisterDiamondInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RegisterDiamond {
    return new Contract(address, _abi, runner) as unknown as RegisterDiamond;
  }
}
