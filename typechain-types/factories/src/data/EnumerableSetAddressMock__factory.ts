/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnumerableSetAddressMock,
  EnumerableSetAddressMockInterface,
} from "../../../src/data/EnumerableSetAddressMock";

const _abi = [
  {
    inputs: [],
    name: "EnumerableSet__IndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761046a908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c80630a3b0a4f1461033e5780631f7b6d321461032157806329092d0e146102365780635dbe47e8146101ed578063908ff303146100fc578063e0886f90146100af5763fd6aad251461006e57600080fd5b346100ab5760203660031901126100ab57356001600160a01b038116908190036100ab579160209281526001835281600019912054019051908152f35b8280fd5b50346100ab5760203660031901126100ab57803592548310156100ee57506100d86020926103ea565b905491519160018060a01b039160031b1c168152f35b905163e637bf3b60e01b8152fd5b5091346101ea57806003193601126101ea5781518091805493848352602080930180958380527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390845b868282106101cd5750505050849003601f01601f191684019567ffffffffffffffff8711858810176101ba575085815282865292518583018190528594938501939290915b82811061019a57505050500390f35b83516001600160a01b03168552869550938101939281019260010161018b565b634e487b7160e01b835260419052602482fd5b83546001600160a01b031685529093019260019283019201610146565b80fd5b50346100ab5760203660031901126100ab57356001600160a01b03811692908390036101ea575061022d6020926000526001602052604060002054151590565b90519015158152f35b5091903461031d57602036600319011261031d5782356001600160a01b03811692908390036101ea5780928082526001602052828220548061027f575b60208585519015158152f35b909192935060001990610294828554016103ea565b90549060031b1c806102c16102aa8585016103ea565b819391549060031b91821b91600019901b19161790565b905584526001602052848420558254801561030a57602095508101906102e6826103ea565b909182549160031b1b19169055825581526001835281812055600190388080610273565b634e487b7160e01b845260318652602484fd5b5080fd5b50503461031d578160031936011261031d57602091549051908152f35b5091903461031d57602036600319011261031d5782356001600160a01b038116908190036100ab578261037e826000526001602052604060002054151590565b15610390575b60208484519015158152f35b809192935054680100000000000000008110156103d7576020945090826103c06102aa84600188960185556103ea565b905580549281526001855220556001903880610384565b634e487b7160e01b825260418552602482fd5b906000918254811015610420578280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019190565b634e487b7160e01b83526032600452602483fdfea2646970667358221220a90c04349c2b3cc6cccc520745f685beec33b6a5dc888f880437068324440e5e64736f6c63430008140033";

type EnumerableSetAddressMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableSetAddressMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableSetAddressMock__factory extends ContractFactory {
  constructor(...args: EnumerableSetAddressMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnumerableSetAddressMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EnumerableSetAddressMock__factory {
    return super.connect(runner) as EnumerableSetAddressMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableSetAddressMockInterface {
    return new Interface(_abi) as EnumerableSetAddressMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnumerableSetAddressMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EnumerableSetAddressMock;
  }
}
