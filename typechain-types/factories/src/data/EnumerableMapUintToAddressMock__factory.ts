/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnumerableMapUintToAddressMock,
  EnumerableMapUintToAddressMockInterface,
} from "../../../src/data/EnumerableMapUintToAddressMock";

const _abi = [
  {
    inputs: [],
    name: "EnumerableMap__IndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "EnumerableMap__NonExistentKey",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keys",
    outputs: [
      {
        internalType: "uint256[]",
        name: "keysOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "set",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "keysOut",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "valuesOut",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "values",
    outputs: [
      {
        internalType: "address[]",
        name: "valuesOut",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761064c908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600090813560e01c9081631f7b6d321461031c575080632f30c6f6146102e6578063307540f61461028d5780634cc8221514610265578063908ff303146101ca5780639507d39a14610170578063971217b714610109578063c34052e0146100db5763e0886f901461008757600080fd5b346100d85760203660031901126100d857823590548110156100ca576100ac906103a7565b50805460019091015482519182526001600160a01b03166020820152f35b505163022fd82760e31b8152fd5b80fd5b50913461010557602036600319011261010557602092829135815260018452205415159051908152f35b8280fd5b50346100d857806003193601126100d8578054610125816105a6565b915b818110610147578351602080825281906101439082018661036a565b0390f35b806101536001926103a7565b5082808060a01b039101541661016982866105ec565b5201610127565b50346100d85760203660031901126100d857819083358152600160205220549182156101bc57506101a6602092600019016103a7565b506001015490516001600160a01b039091168152f35b9051633d547ec560e21b8152fd5b5090346102615781600319360112610261578154916101e8836105a6565b926101f2816105a6565b915b818110610222575050610143906102148351948486958652850190610336565b90838203602085015261036a565b8061022e6001926103a7565b505461023a82886105ec565b52610244816103a7565b5082808060a01b039101541661025a82866105ec565b52016101f4565b5080fd5b50346100d85760203660031901126100d85750610284602092356104b9565b90519015158152f35b50346100d857806003193601126100d85780546102a9816105a6565b915b8181106102c75783516020808252819061014390820186610336565b806102d36001926103a7565b50546102df82866105ec565b52016102ab565b5091346101055781600319360112610105576024356001600160a01b03811693908490036100d8575060209261028491356103f4565b905034610261578160031936011261026157602091548152f35b90815180825260208080930193019160005b828110610356575050505090565b835185529381019392810192600101610348565b90815180825260208080930193019160005b82811061038a575050505090565b83516001600160a01b03168552938101939281019260010161037c565b9060009182548110156103e05782805260011b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019190565b634e487b7160e01b83526032600452602483fd5b600081815260019283602052604082205480156000146104a15750604051906040820182811067ffffffffffffffff82111761048d576040528382526020820190815282546801000000000000000081101561048d578086610458920185556103a7565b92909261047957518255519084015580549181526020839052604090205590565b634e487b7160e01b84526004849052602484fd5b634e487b7160e01b84526041600452602484fd5b6104b3919350600094929419016103a7565b50015590565b600081815260019182602052604082205480151560001461057157600019906104e4828554016103a7565b506104f08383016103a7565b61055d5781810361054b575b5054845284602052604084205582548015610537570161051b816103a7565b6104795784818580935501558255815281602052604081205590565b634e487b7160e01b84526031600452602484fd5b815481558680830154910155386104fc565b634e487b7160e01b86526004869052602486fd5b5050905090565b67ffffffffffffffff81116105905760051b60200190565b634e487b7160e01b600052604160045260246000fd5b906105b082610578565b60405190601f1990601f018116820167ffffffffffffffff811183821017610590576040528382526105e28294610578565b0190602036910137565b80518210156106005760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122014a3d22cf9fcdc01e73996a34178e7cfcde32e9d9db6df1443b2928382efd46a64736f6c63430008140033";

type EnumerableMapUintToAddressMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumerableMapUintToAddressMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnumerableMapUintToAddressMock__factory extends ContractFactory {
  constructor(...args: EnumerableMapUintToAddressMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnumerableMapUintToAddressMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): EnumerableMapUintToAddressMock__factory {
    return super.connect(runner) as EnumerableMapUintToAddressMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableMapUintToAddressMockInterface {
    return new Interface(_abi) as EnumerableMapUintToAddressMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnumerableMapUintToAddressMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EnumerableMapUintToAddressMock;
  }
}
